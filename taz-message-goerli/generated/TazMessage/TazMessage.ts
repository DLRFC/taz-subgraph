// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class MemberAdded extends ethereum.Event {
  get params(): MemberAdded__Params {
    return new MemberAdded__Params(this);
  }
}

export class MemberAdded__Params {
  _event: MemberAdded;

  constructor(event: MemberAdded) {
    this._event = event;
  }

  get groupId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get identityCommitment(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class MessageAdded extends ethereum.Event {
  get params(): MessageAdded__Params {
    return new MessageAdded__Params(this);
  }
}

export class MessageAdded__Params {
  _event: MessageAdded;

  constructor(event: MessageAdded) {
    this._event = event;
  }

  get parentMessageId(): string {
    return this._event.parameters[0].value.toString();
  }

  get messageId(): string {
    return this._event.parameters[1].value.toString();
  }

  get messageContent(): string {
    return this._event.parameters[2].value.toString();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class TazMessage extends ethereum.SmartContract {
  static bind(address: Address): TazMessage {
    return new TazMessage("TazMessage", address);
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  semaContract(): Address {
    let result = super.call("semaContract", "semaContract():(address)", []);

    return result[0].toAddress();
  }

  try_semaContract(): ethereum.CallResult<Address> {
    let result = super.tryCall("semaContract", "semaContract():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get semaContractAddr(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class AddMemberCall extends ethereum.Call {
  get inputs(): AddMemberCall__Inputs {
    return new AddMemberCall__Inputs(this);
  }

  get outputs(): AddMemberCall__Outputs {
    return new AddMemberCall__Outputs(this);
  }
}

export class AddMemberCall__Inputs {
  _call: AddMemberCall;

  constructor(call: AddMemberCall) {
    this._call = call;
  }

  get groupId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get identityCommitment(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class AddMemberCall__Outputs {
  _call: AddMemberCall;

  constructor(call: AddMemberCall) {
    this._call = call;
  }
}

export class AddMessageCall extends ethereum.Call {
  get inputs(): AddMessageCall__Inputs {
    return new AddMessageCall__Inputs(this);
  }

  get outputs(): AddMessageCall__Outputs {
    return new AddMessageCall__Outputs(this);
  }
}

export class AddMessageCall__Inputs {
  _call: AddMessageCall;

  constructor(call: AddMessageCall) {
    this._call = call;
  }

  get messageId(): string {
    return this._call.inputValues[0].value.toString();
  }

  get messageContent(): string {
    return this._call.inputValues[1].value.toString();
  }

  get groupId(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get signal(): Bytes {
    return this._call.inputValues[3].value.toBytes();
  }

  get nullifierHash(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }

  get externalNullifier(): BigInt {
    return this._call.inputValues[5].value.toBigInt();
  }

  get proof(): Array<BigInt> {
    return this._call.inputValues[6].value.toBigIntArray();
  }
}

export class AddMessageCall__Outputs {
  _call: AddMessageCall;

  constructor(call: AddMessageCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class ReplyToMessageCall extends ethereum.Call {
  get inputs(): ReplyToMessageCall__Inputs {
    return new ReplyToMessageCall__Inputs(this);
  }

  get outputs(): ReplyToMessageCall__Outputs {
    return new ReplyToMessageCall__Outputs(this);
  }
}

export class ReplyToMessageCall__Inputs {
  _call: ReplyToMessageCall;

  constructor(call: ReplyToMessageCall) {
    this._call = call;
  }

  get parentMessageId(): string {
    return this._call.inputValues[0].value.toString();
  }

  get messageId(): string {
    return this._call.inputValues[1].value.toString();
  }

  get messageContent(): string {
    return this._call.inputValues[2].value.toString();
  }

  get groupId(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get signal(): Bytes {
    return this._call.inputValues[4].value.toBytes();
  }

  get nullifierHash(): BigInt {
    return this._call.inputValues[5].value.toBigInt();
  }

  get externalNullifier(): BigInt {
    return this._call.inputValues[6].value.toBigInt();
  }

  get proof(): Array<BigInt> {
    return this._call.inputValues[7].value.toBigIntArray();
  }
}

export class ReplyToMessageCall__Outputs {
  _call: ReplyToMessageCall;

  constructor(call: ReplyToMessageCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}

export class UpdateSemaphoreGroupAdminCall extends ethereum.Call {
  get inputs(): UpdateSemaphoreGroupAdminCall__Inputs {
    return new UpdateSemaphoreGroupAdminCall__Inputs(this);
  }

  get outputs(): UpdateSemaphoreGroupAdminCall__Outputs {
    return new UpdateSemaphoreGroupAdminCall__Outputs(this);
  }
}

export class UpdateSemaphoreGroupAdminCall__Inputs {
  _call: UpdateSemaphoreGroupAdminCall;

  constructor(call: UpdateSemaphoreGroupAdminCall) {
    this._call = call;
  }

  get groupId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get newAdmin(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class UpdateSemaphoreGroupAdminCall__Outputs {
  _call: UpdateSemaphoreGroupAdminCall;

  constructor(call: UpdateSemaphoreGroupAdminCall) {
    this._call = call;
  }
}
